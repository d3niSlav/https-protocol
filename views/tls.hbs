<section class="page-title">
    <div class="container">
        <div class="row">
            <div class="col-md-5 icon-container text-right">
                <img src="/img/tls-web-security.png" alt="TLS Certificate"/>
            </div>
            <div class="col-md-7 heading">
                Какво e <br> TLS сертификат?
            </div>
        </div>
    </div>
</section>
<section id="what-is-tls" class="list-information">
    <div class="container">
        <p>
            TLS (Transport Layer Security) е само актуализирана, по-сигурна версия на SSL. Протоколът TLS има за цел да
            осигури три основни услуги за всички приложения, които се намират над него: криптиране, удостоверяване и
            целостта на данните. Технически, от вас не се изисква да използва и трите във всяка ситуация. Може да решите
            да
            приемете сертификат, без да потвърждавате неговата автентичност, но трябва да сте добре запознати с
            рисковете за
            сигурността и последиците от това. На практика сигурната уеб приложение ще използва и трите услуги.
        </p>
        <div class="row">
            <div class="col-xs-12 col-sm-6">
                <dl>
                    <dt>Криптиране</dt>
                    <dd>Механизъм за омаловажаване на това, което се изпраща от един хост към друг.</dd>
                    <dt>Удостоверяване</dt>
                    <dd>Механизъм за проверка на валидността на предоставения идентификационен материал.</dd>
                    <dt>Интегритет</dt>
                    <dd>Механизъм за откриване на подправяне и фалшифициране на съобщения.</dd>
                </dl>
            </div>
            <div class="col-xs-12 col-sm-6 text-center">
                <img src="/img/website-security.png" alt="Web Security"/>
            </div>
        </div>
    </div>
</section>
<section class="intro container mt-0">
    <p>
        За да се създаде криптографски сигурен канал за данни, връзката двете страни трябва да се съгласят с кои шифри
        ще бъдат използвани и ключовете, използвани за шифроване на данните. Протоколът TLS указва добре дефинирана
        последователност при ръкостискане, за да извърши тази обмяна, която ще разгледаме подробно в TLS Handshake.
        Гениалната част от това ръкостискане и причината, поради която TLS работи на практика, се дължи на използването
        на криптография с публичен ключ (известна още като асиметрична ключова криптография), която позволява на
        връстниците да преговарят за споделен таен ключ, без да е необходимо да се установяват предварително познания
        един на друг и да направят това по некриптиран канал.
    </p>
    <div class="row">
        <div class="col-xs-12 col-md-6 image-container">
            <img src="/img/asymmetric.png" alt="Short preview of a handshake"/>
        </div>
        <div class="col-xs-12 col-md-6 description-left pr-3">
            <p>
                Като част от управлението на TLS, протоколът също така позволява на двамата пиъри да удостоверяват
                самоличността си. Когато се използва в браузъра, този механизъм за удостоверяване позволява на клиента
                да провери дали сървърът е този, за когото се твърди, че е (например банката ви), а не някой, който
                просто се преструва, че е целта, като излъже своето име или IP адрес. Тази проверка се основава на
                установената верига на доверие - вижте веригата за доверие и сертифициращите органи. Освен това сървърът
                може също по желание да потвърди самоличността на клиента - например фирмен прокси сървър може да
                удостовери всички служители, всеки от които може да има свой собствен уникален сертификат, подписан от
                компанията.
            </p>
        </div>
    </div>
    <p>
        Накрая, с шифроване и удостоверяване на място, TLS протоколът също така предоставя свой собствен механизъм за
        създаване на съобщения и подписва всяко съобщение с код за удостоверяване на съобщения (MAC). MAC алгоритъмът е
        еднопосочна криптографска хеш функция (ефективно контролна сума), ключът към който се договаря от двамата
        връстници. Всеки път, когато се изпраща TLS запис, се генерира и добавя MAC стойност за това съобщение и
        приемникът тогава може да изчисли и потвърди изпратената MAC стойност, за да осигури интегритета и
        автентичността на съобщенията.
    </p>
</section>
<section class="info-box">
    <div class="container">
        <div class="information-holder row">
            <div class="col-xs-12 col-sm-3 image-container text-center">
                <img src="/img/web-security-key.png" alt="Web security"/>
            </div>
            <div class="col-xs-12 col-sm-9">
                <div class="description-holder">
                    <p>
                        Комбинираните и трите механизма служат като основа за сигурна комуникация в мрежата. Всички
                        съвременни уеб браузъри осигуряват поддръжка на различни шифри, могат да удостоверяват както
                        клиента, така и сървъра и прозрачно извършват проверки за цялост на съобщенията за всеки запис.
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>
<section id="tls-handshake" class="list-information pt-5">
    <div class="container pt-5">
        <h3>TLS Handshake</h3>
        <p>
            Преди клиентът и сървърът да могат да започнат да обменят данни за приложенията през TLS, трябва да се
            договори кодираният тунел: клиентът и сървърът трябва да се споразумеят за версията на протокола TLS, да
            изберат шрифтовете и да проверят сертификатите, ако е необходимо. За съжаление, всяка от тези стъпки изисква
            нови кръгови маршрути на пакети между клиента и сървъра, което добавя латентност при стартиране
            на всички TLS връзки.
        </p>
        <div class="row">
            <div class="col-12 text-center p-5">
                <img src="/img/tls-work.svg" alt="TLS Handshake"/>
            </div>
            <div class="col-12">
                <dl>
                    <dt>0 ms</dt>
                    <dd>
                        TLS преминава през надежден транспорт (TCP), което означава, че първо трябва да завършим
                        трипосочното предаване на TCP, което отнема един пълен двупосочен маршрут.
                    </dd>
                    <dt>56 ms</dt>
                    <dd>
                        При наличието на TCP връзката клиентът изпраща редица спецификации в обикновен текст, като
                        например версията на TLS протокола, който се изпълнява, списъка с поддържани шифри и други опции
                        на TLS, които може да искате да използвате.
                    </dd>
                    <dt>84 ms</dt>
                    <dd>
                        Сървърът избира версията на протокола TLS за по-нататъшна комуникация, решава дали даден шифър
                        от списъка, предоставен от клиента, придава своя сертификат и изпраща отговор на клиента. По
                        желание сървърът може също да изпрати заявка за сертификат и параметри на клиента за други
                        разширения на TLS.
                    </dd>
                    <dt>112 ms</dt>
                    <dd>
                        Ако се приеме, че и двете страни са в състояние да договорят обща версия и шифър, а клиентът е
                        доволен от предоставения от сървъра сертификат, клиентът инициира RSA или Diffie-Hellman ключ,
                        който се използва за установяване на симетричния ключ за последваща сесия.
                    </dd>
                    <dt>140 ms</dt>
                    <dd>
                        Сървърът обработва параметрите за обмен на ключ, изпратени от клиента, проверява целостта на
                        съобщенията чрез проверка на MAC и връща обратно криптирано съобщение до клиента.
                    </dd>
                    <dt>168 ms</dt>
                    <dd>
                        Клиентът декриптира съобщението със съгласувания симетричен ключ, проверява MAC и ако всичко е
                        наред, тунелът се установява и данните за приложението вече могат да бъдат изпратени.
                    </dd>
                </dl>
            </div>
        </div>
    </div>
</section>
